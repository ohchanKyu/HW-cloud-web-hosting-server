plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.4'
}

group = 'kr.ac.dankook'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springGrpcVersion', "0.3.0");
}

dependencies {
	implementation "io.grpc:grpc-netty:1.69.0"
	implementation 'io.grpc:grpc-protobuf:1.57.1'
	implementation 'io.grpc:grpc-stub:1.57.1'
	compileOnly 'org.apache.tomcat:annotations-api:6.0.53'
	implementation 'io.grpc:grpc-services'
	implementation 'org.springframework.grpc:spring-grpc-spring-boot-starter'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.8'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'com.auth0', name: 'java-jwt', version: '4.4.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
dependencyManagement {
	imports {
		mavenBom "org.springframework.grpc:spring-grpc-dependencies:${springGrpcVersion}"
	}
}
protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.25.1"
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.64.0'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}
compileJava.options.encoding='UTF-8'
tasks.withType(JavaCompile).configureEach {
	options.encoding = "UTF-8"
}
tasks.named('test') {
	useJUnitPlatform()
}
